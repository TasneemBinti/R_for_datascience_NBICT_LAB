q()
Count_A <- c(200,100,450,125,80,60)
Count_B <- c(200,200,150,75,50,60)
Count_A + Count_B
Count_A == Count_B
setwd("D:/Repositories/R_for_datascience_NBICT_LAB/D-17")
ToothGrowth
View(ToothGrowth)
tooth_data=ToothGrowth
#Creating a function for summarizing the data
#based on the grouping variable
data_summary = function(data, varname, groupnames){
require(plyr)
summary_func = function(x, col){
c(mean = mean(x[[col]], na.rm = TRUE), sd = sd(x[[col]], na.rm = TRUE))
}
data_sum = ddply(data, groupnames, .fun = summary_func, varname)
data_sum = rename(data_sum, c("mean" = varname))
return(data_sum)
}
summary_func = function(x, col){
c(mean = mean(x[[col]], na.rm = TRUE), sd = sd(x[[col]], na.rm = TRUE))
}
return(data_sum)
summary_func = function(x, col){
c(mean = mean(x[[col]], na.rm = TRUE), sd = sd(x[[col]], na.rm = TRUE))
}
#Creating a function for summarizing the data
#based on the grouping variable
data_summary = function(data, varname, groupnames){
require(plyr)
summary_func = function(x, col){
c(mean = mean(x[[col]], na.rm = TRUE), sd = sd(x[[col]], na.rm = TRUE))
}
data_sum = ddply(data, groupnames, .fun = summary_func, varname)
data_sum = rename(data_sum, c("mean" = varname))
return(data_sum)
}
return(data_sum)}
return(data_sum)}
#Creating a function for summarizing the data
#based on the grouping variable
data_summary = function(data, varname, groupnames){
require(plyr)
summary_func = function(x, col){
c(mean = mean(x[[col]], na.rm = TRUE), sd = sd(x[[col]], na.rm = TRUE))
}
data_sum = ddply(data, groupnames, .fun = summary_func, varname)
data_sum = rename(data_sum, c("mean" = varname))
return(data_sum)
}
d_summary=data_summary(tooth_data,varname="len",groupnames=c("supp","dose"))
d_summary=data_summary(tooth_data,varname="len",groupnames=c("supp","dose"))
View(d_summary)
